set encoding=utf8
scriptencoding utf8

" vim-plug
" for auto-installation
" https://github.com/junegunn/vim-plug/wiki/tips#automatic-installation
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !mkdir -p ~/.vim/autoload && wget -O ~/.vim/autoload/plug.vim
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  augroup vim_plug
      autocmd!
      autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
  augroup END
endif
" Run PlugInstall if there are missing plugins
" https://github.com/junegunn/vim-plug/wiki/tips#automatic-installation-of-missing-plugins
function! s:auto_plug() abort
    PlugInstall --sync
    PlugUpdate --sync
    silent !echo '**rerun `vim` to load newly installed plugins**. Quitting...'
    sleep 5
    quitall
endfunction
autocmd VimEnter * ++once if len(filter(values(g:plugs), '!isdirectory(v:val.dir)')) | call s:auto_plug() | endif
" LanguageClient-neovim variables
let g:myLSRunning = 0
let g:myLSLangs = []
if has('perl')
    perl <<EOF
    use strict;
    use warnings FATAL => 'all', NONFATAL => 'redefine';

    sub executable{
        `sh -c 'command -v $_[0]' 2>&1`;
        return !($? >> 8);
    }

    my $lsCmds = <<~"__EOF"
        let g:LanguageClient_serverCommands = {
        'rust': ['~/.cargo/bin/rustup', 'run', 'stable', 'rls'],
        'haskell': ['haskell-language-server-wrapper', '--lsp'],
        'reason': ['/home/hejohns/.vim/language-server/rls-linux/reason-language-server', '--stdio'],
        'ocaml': ['ocamllsp'],
        'perl': ['pls'],
        'tex': ['texlab'],
        'nix': ['rnix-lsp'],
        'go': ['gopls'],
        'ruby': ['bundler', 'exec', 'solargraph', 'stdio'],
        'c': ['clangd'],
        'cpp': ['clangd'],
        'typescript': ['deno', 'lsp'],
        }
        __EOF
        ;
    my @rows = split /\n/, $lsCmds; # for @langs
    $lsCmds =~ s/\n//g; # vim doesn't like the newlines
    VIM::DoCommand($lsCmds);
    my @langs = map {/'(\S+)':/; $1} grep {/'(\S+)':/} @rows;
    my @myLSLangs = map {"'$_',"} @langs;
    VIM::DoCommand("let g:myLSLangs = [@myLSLangs]");
    # check if commands exist
    my @h = map {/'(\S+)':\s*\[(.+)\]/; ($1, $2)} grep {/'\S+':/; } @rows;
    my %h = @h;
    for my $k (keys %h){
        my $c = join('', (split /,/, $h{$k})); # NOTE: this is extremely buggy, but please just have sane arguments
        $c =~ s/'//g;
        if(!&executable($c)){
            VIM::DoCommand("silent !echo '[warning] Need $c for ft=$k'");
        }
    }
EOF
else
    silent !echo '[warning] Need +perl to initialize language server correctly'
endif
" list of plugins
call plug#begin('~/.vim/plugged')
" moved my vimrc into a plugin
Plug 'hejohns/hejohns-vim', {'branch': 'trunk'}
try
    source ~/.vim/plugged/hejohns-vim/plugins.vim
catch
    silent !echo '[error] sourcing `:Plug` list failed. `:PlugUpdate` manually, and rerun vim.'
endtry
call plug#end()
" clang_complete
" need to run this before VimEnter to silence clang_complete errors
try
    call hejohns#initialize_clang_complete()
catch
    silent !echo '[warning] `hejohns\#initialize_clang_complete` errored out-- are we installing plugins for the first time?'
endtry
" ------------------------------------------------------------
" On the t130, I had issues where this was suuuuper slow for some reason
" (startup time), and had to commend out the opam stuff below.
"
" I haven't seen this issue since, but I'm leaving this note here in case it
" comes up again.
" Worst case, just comment it out again as long as we don't need to edit ocaml
" for the time being.
" ------------------------------------------------------------
if !exists('s:opam_share_dir')
    silent !echo '[warning] If you want to edit ocaml, you might need to run opam user-setup'
endif
