#!/usr/bin/env perl

use v5.28;
use utf8;

use strict;
use warnings FATAL => qw(uninitialized);

my $help = <<~"EOF"
Usage: $0 [-n <index>] [-e] -- <cmd>

    -n <index>     index into <cmd> stdout lines (as a perl array,
                   thus 0-based and negative values count backwards from end)
    -e             treat arguments as stdout lines
Description:
    <cmd> stdout of the following form is accepted

    <file>:<line>:
    <file>:<line>:
    ...
    <file>:<line>:

    $0 opens the selected file in vim at the corresponding line
Examples:
    $0 -- grep -rPn <pattern>
        defaults to open first (0th) <file> at corresponding <line>
    $0 -n -1 -- git grep -rPn <pattern>
        opens last <file> at corresponding <line>
    $0 -n 1 -e -- \$(make 2>&1 | perl -p -e 'm/^(\\S+:\\d+:)/; \$_ = \$1 . "\\n"')
        opens second <file> at corresponding <line>, where <cmd> needs processing
EOF
;

my $my1;
my $my2;
my $eFlag;
eval {
    my $index = 0;
    if(defined $ARGV[0] and $ARGV[0] eq '-n'){
        shift @ARGV; # -n
        $index = shift @ARGV; # <index>
    }
    if(defined $ARGV[0] and $ARGV[0] eq '-e'){
        $eFlag = 1;
        shift @ARGV; # -e
    }
    (my $dashdash = shift @ARGV) eq '--' or die;
    # handle aliases
    chomp(my $bashrc = `ls ~/.bashrc`);
    open(my $bashrcFH, '<:encoding(UTF-8)', $bashrc) or die;
    chomp(my @bashrc = <$bashrcFH>);
    @bashrc = grep {m/^alias\s+(\S+)=['"](.+)['"]/} @bashrc;
    my @keys = map {m/^alias\s+(\S+)=/; $1} @bashrc;
    my @vals = map {m/^alias\s+\S+=['"](.+)['"]/; $1} @bashrc;
    my %aliases;
    for(my $i=0; $i < @keys; $i++){
        $aliases{$keys[$i]} = $vals[$i];
    }
    # done handling aliases
    if(exists $aliases{$ARGV[0]}){
        $ARGV[0] = $aliases{$ARGV[0]};
    }
    my $cmd = join ' ', @ARGV;
    my @stdout = $eFlag? @ARGV : `$cmd`;
    my $line = $stdout[$index];
    $line =~ m/^(\S+):(\d+):/ or die;
    $my1 = $1;
    $my2 = $2;
    0;
} and goto HELP;

if(defined $my1 and defined $my2){
    exec 'vim', $my1,'-c', $my2;
}

HELP:
print $help;
0;
